<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="16" passed="16" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-06-12T12:52:24 IST" name="Default suite" finished-at="2023-06-12T13:26:53 IST" duration-ms="2068533">
    <groups>
    </groups>
    <test started-at="2023-06-12T12:52:24 IST" name="Default test" finished-at="2023-06-12T13:26:53 IST" duration-ms="2068533">
      <class name="Test_Suite.AGS_Test_Suite">
        <test-method is-config="true" signature="initiate(org.testng.ITestContext,java.lang.String)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T12:52:24 IST" name="initiate" finished-at="2023-06-12T12:52:33 IST" duration-ms="8396" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7e5c04a4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initiate -->
        <test-method is-config="true" signature="initializeRepo()[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T12:52:33 IST" name="initializeRepo" finished-at="2023-06-12T12:52:33 IST" depends-on-methods="utilities.DriverModule.initiate" duration-ms="59" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeRepo -->
        <test-method is-config="true" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T12:52:33 IST" name="nameBefore" finished-at="2023-06-12T12:52:33 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC01_Anonymous_User_Registration() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method signature="TC01_Anonymous_User_Registration()[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T12:52:33 IST" name="TC01_Anonymous_User_Registration" finished-at="2023-06-12T12:57:43 IST" duration-ms="310045" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC01_Anonymous_User_Registration -->
        <test-method is-config="true" signature="nameAfter(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T12:57:43 IST" name="nameAfter" finished-at="2023-06-12T12:57:43 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC01_Anonymous_User_Registration() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameAfter -->
        <test-method is-config="true" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T12:57:43 IST" name="nameBefore" finished-at="2023-06-12T12:57:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC02_User_Submit_Order_Monthly() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method signature="TC02_User_Submit_Order_Monthly()[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T12:57:43 IST" name="TC02_User_Submit_Order_Monthly" finished-at="2023-06-12T13:02:50 IST" duration-ms="307028" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC02_User_Submit_Order_Monthly -->
        <test-method is-config="true" signature="nameAfter(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:02:50 IST" name="nameAfter" finished-at="2023-06-12T13:02:50 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC02_User_Submit_Order_Monthly() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameAfter -->
        <test-method is-config="true" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:02:50 IST" name="nameBefore" finished-at="2023-06-12T13:02:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC03_Standalone_Registration_and_Login() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method signature="TC03_Standalone_Registration_and_Login()[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:02:50 IST" name="TC03_Standalone_Registration_and_Login" finished-at="2023-06-12T13:03:28 IST" duration-ms="37869" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC03_Standalone_Registration_and_Login -->
        <test-method is-config="true" signature="nameAfter(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:03:28 IST" name="nameAfter" finished-at="2023-06-12T13:03:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC03_Standalone_Registration_and_Login() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameAfter -->
        <test-method is-config="true" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:03:28 IST" name="nameBefore" finished-at="2023-06-12T13:03:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC04_Reset_Password_My_Account() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method signature="TC04_Reset_Password_My_Account()[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:03:28 IST" name="TC04_Reset_Password_My_Account" finished-at="2023-06-12T13:03:54 IST" duration-ms="26297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC04_Reset_Password_My_Account -->
        <test-method is-config="true" signature="nameAfter(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:03:54 IST" name="nameAfter" finished-at="2023-06-12T13:03:54 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC04_Reset_Password_My_Account() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameAfter -->
        <test-method signature="TC05_ResetPasswordFromLoginPage()[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:03:54 IST" name="TC05_ResetPasswordFromLoginPage" finished-at="2023-06-12T13:04:48 IST" duration-ms="53972" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC05_ResetPasswordFromLoginPage -->
        <test-method is-config="true" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:03:54 IST" name="nameBefore" finished-at="2023-06-12T13:03:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC05_ResetPasswordFromLoginPage() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method is-config="true" signature="nameAfter(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:04:48 IST" name="nameAfter" finished-at="2023-06-12T13:04:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC05_ResetPasswordFromLoginPage() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameAfter -->
        <test-method is-config="true" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:04:48 IST" name="nameBefore" finished-at="2023-06-12T13:04:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC06_Zero_Dollar_Flow() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method signature="TC06_Zero_Dollar_Flow()[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:04:48 IST" name="TC06_Zero_Dollar_Flow" finished-at="2023-06-12T13:05:23 IST" duration-ms="35143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC06_Zero_Dollar_Flow -->
        <test-method is-config="true" signature="nameAfter(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:05:23 IST" name="nameAfter" finished-at="2023-06-12T13:05:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC06_Zero_Dollar_Flow() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameAfter -->
        <test-method signature="TC07_Verify_tax_Non_US_Address()[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:05:23 IST" name="TC07_Verify_tax_Non_US_Address" finished-at="2023-06-12T13:10:19 IST" duration-ms="295885" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC07_Verify_tax_Non_US_Address -->
        <test-method is-config="true" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:05:23 IST" name="nameBefore" finished-at="2023-06-12T13:05:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC07_Verify_tax_Non_US_Address() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method is-config="true" signature="nameAfter(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:10:19 IST" name="nameAfter" finished-at="2023-06-12T13:10:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC07_Verify_tax_Non_US_Address() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameAfter -->
        <test-method signature="TC08_Place_Order_With_Discount_Code()[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:10:19 IST" name="TC08_Place_Order_With_Discount_Code" finished-at="2023-06-12T13:15:11 IST" duration-ms="291532" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC08_Place_Order_With_Discount_Code -->
        <test-method is-config="true" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:10:19 IST" name="nameBefore" finished-at="2023-06-12T13:10:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC08_Place_Order_With_Discount_Code() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method is-config="true" signature="nameAfter(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:15:11 IST" name="nameAfter" finished-at="2023-06-12T13:15:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC08_Place_Order_With_Discount_Code() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameAfter -->
        <test-method is-config="true" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:15:11 IST" name="nameBefore" finished-at="2023-06-12T13:15:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC09_Place_Order_With_Existing_User() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method signature="TC09_Place_Order_With_Existing_User()[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:15:11 IST" name="TC09_Place_Order_With_Existing_User" finished-at="2023-06-12T13:16:50 IST" duration-ms="99350" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC09_Place_Order_With_Existing_User -->
        <test-method is-config="true" signature="nameAfter(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:16:50 IST" name="nameAfter" finished-at="2023-06-12T13:16:50 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC09_Place_Order_With_Existing_User() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameAfter -->
        <test-method signature="TC10_Place_Order_Non_US_Address()[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:16:50 IST" name="TC10_Place_Order_Non_US_Address" finished-at="2023-06-12T13:22:10 IST" duration-ms="319870" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC10_Place_Order_Non_US_Address -->
        <test-method is-config="true" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:16:50 IST" name="nameBefore" finished-at="2023-06-12T13:16:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC10_Place_Order_Non_US_Address() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method is-config="true" signature="nameAfter(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:22:10 IST" name="nameAfter" finished-at="2023-06-12T13:22:10 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC10_Place_Order_Non_US_Address() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameAfter -->
        <test-method signature="TC11_Edit_Profile()[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:22:10 IST" name="TC11_Edit_Profile" finished-at="2023-06-12T13:22:35 IST" duration-ms="25230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC11_Edit_Profile -->
        <test-method is-config="true" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:22:10 IST" name="nameBefore" finished-at="2023-06-12T13:22:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC11_Edit_Profile() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method is-config="true" signature="nameAfter(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:22:35 IST" name="nameAfter" finished-at="2023-06-12T13:22:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC11_Edit_Profile() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameAfter -->
        <test-method signature="TC12_Edit_Billing_Address()[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:22:35 IST" name="TC12_Edit_Billing_Address" finished-at="2023-06-12T13:23:14 IST" duration-ms="39198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC12_Edit_Billing_Address -->
        <test-method is-config="true" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:22:35 IST" name="nameBefore" finished-at="2023-06-12T13:22:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC12_Edit_Billing_Address() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method is-config="true" signature="nameAfter(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:23:14 IST" name="nameAfter" finished-at="2023-06-12T13:23:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC12_Edit_Billing_Address() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameAfter -->
        <test-method is-config="true" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:23:14 IST" name="nameBefore" finished-at="2023-06-12T13:23:14 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC13_Edit_Card_Details() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method signature="TC13_Edit_Card_Details()[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:23:14 IST" name="TC13_Edit_Card_Details" finished-at="2023-06-12T13:23:50 IST" duration-ms="35513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC13_Edit_Card_Details -->
        <test-method is-config="true" signature="nameAfter(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:23:50 IST" name="nameAfter" finished-at="2023-06-12T13:23:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC13_Edit_Card_Details() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameAfter -->
        <test-method is-config="true" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:23:50 IST" name="nameBefore" finished-at="2023-06-12T13:23:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC14_Manage_Subscription_Auto_Renew_Toggle_validation() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method signature="TC14_Manage_Subscription_Auto_Renew_Toggle_validation()[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:23:50 IST" name="TC14_Manage_Subscription_Auto_Renew_Toggle_validation" finished-at="2023-06-12T13:24:33 IST" duration-ms="43387" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC14_Manage_Subscription_Auto_Renew_Toggle_validation -->
        <test-method is-config="true" signature="nameAfter(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:24:33 IST" name="nameAfter" finished-at="2023-06-12T13:24:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC14_Manage_Subscription_Auto_Renew_Toggle_validation() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameAfter -->
        <test-method signature="TC15_Riskified_Declined_Order()[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:24:33 IST" name="TC15_Riskified_Declined_Order" finished-at="2023-06-12T13:26:26 IST" duration-ms="113021" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC15_Riskified_Declined_Order -->
        <test-method is-config="true" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:24:33 IST" name="nameBefore" finished-at="2023-06-12T13:24:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC15_Riskified_Declined_Order() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method is-config="true" signature="nameAfter(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:26:26 IST" name="nameAfter" finished-at="2023-06-12T13:26:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC15_Riskified_Declined_Order() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameAfter -->
        <test-method is-config="true" signature="nameBefore(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:26:26 IST" name="nameBefore" finished-at="2023-06-12T13:26:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC16_Open_Homepage() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameBefore -->
        <test-method signature="TC16_Open_Homepage()[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:26:26 IST" name="TC16_Open_Homepage" finished-at="2023-06-12T13:26:46 IST" duration-ms="19771" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC16_Open_Homepage -->
        <test-method is-config="true" signature="nameAfter(java.lang.reflect.Method)[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:26:46 IST" name="nameAfter" finished-at="2023-06-12T13:26:46 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test_Suite.AGS_Test_Suite.TC16_Open_Homepage() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameAfter -->
        <test-method is-config="true" signature="CloseBrowser()[pri:0, instance:Test_Suite.AGS_Test_Suite@64dafeed]" started-at="2023-06-12T13:26:46 IST" name="CloseBrowser" finished-at="2023-06-12T13:26:53 IST" duration-ms="6770" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseBrowser -->
      </class> <!-- Test_Suite.AGS_Test_Suite -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
